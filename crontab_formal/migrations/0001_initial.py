# Generated by Django 2.0 on 2018-01-30 04:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rcrontab', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=200)),
                ('project', models.CharField(max_length=50, verbose_name='项目名称')),
                ('project_conf', models.FileField(blank=True, null=True, upload_to='project_conf/')),
                ('project_package', models.FileField(blank=True, null=True, upload_to='project_package/')),
            ],
            options={
                'db_table': 'py_script_programs_path',
            },
        ),
        migrations.CreateModel(
            name='PyScriptBaseInfoV2',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('program_type', models.IntegerField(choices=[(0, '抓取'), (1, '计算'), (2, '其他')], verbose_name='程序类型')),
                ('version', models.DateField(blank=True, null=True)),
                ('run_type', models.SmallIntegerField(choices=[(0, '调用api'), (1, '调用程序')], default=0)),
                ('function', models.TextField(max_length=50, verbose_name='程序功能')),
                ('exec_plan', models.IntegerField(choices=[(1, 'day'), (2, 'month'), (3, 'quarter')], verbose_name='执行计划')),
                ('exec_month', models.CharField(blank=True, max_length=30, null=True)),
                ('exec_day', models.CharField(blank=True, max_length=30, null=True)),
                ('exec_time', models.CharField(blank=True, max_length=50, null=True)),
                ('times', models.IntegerField(default=1)),
                ('is_stop', models.IntegerField(choices=[(0, '执行'), (1, '停止')], default=0)),
                ('is_test', models.IntegerField(choices=[(1, '测试'), (0, '正式')], default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='programs', to='rcrontab.PyScriptOwnerList')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='program', to='crontab_formal.Path')),
            ],
            options={
                'db_table': 'py_script_base_info_v2',
            },
        ),
        migrations.CreateModel(
            name='ResultLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.DateField()),
                ('event_time', models.DateTimeField()),
                ('subversion', models.DateTimeField(blank=True, null=True)),
                ('event_type', models.IntegerField(choices=[(0, '执行调度'), (1, '开始执行'), (2, '正常结束'), (3, '异常终止'), (4, '质控正常'), (5, '质控异常')])),
                ('extra_info', models.TextField(blank=True, null=True)),
                ('flag', models.IntegerField(blank=True, null=True)),
                ('script', models.ForeignKey(db_column='sid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='result', to='crontab_formal.PyScriptBaseInfoV2')),
            ],
            options={
                'db_table': 'py_script_result_log',
            },
        ),
        migrations.CreateModel(
            name='ServerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('port', models.IntegerField(default=33541)),
                ('name', models.CharField(max_length=100)),
                ('uptime', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(1, 'on_line'), (0, 'off_line')], default=0)),
            ],
            options={
                'db_table': 'py_script_server_info_v2',
            },
        ),
        migrations.CreateModel(
            name='TablesInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_server', models.CharField(choices=[('db_ali', 'db_阿里云'), ('db_151', 'db_151'), ('db_153', 'db_153')], max_length=20)),
                ('db_name', models.CharField(max_length=30)),
                ('table_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'py_script_tables_info',
            },
        ),
        migrations.AlterUniqueTogether(
            name='tablesinfo',
            unique_together={('db_server', 'db_name', 'table_name')},
        ),
        migrations.AddField(
            model_name='pyscriptbaseinfov2',
            name='pre_tables',
            field=models.ManyToManyField(blank=True, related_name='son_program', to='crontab_formal.TablesInfo'),
        ),
        migrations.AddField(
            model_name='pyscriptbaseinfov2',
            name='result_tables',
            field=models.ManyToManyField(related_name='father_program', to='crontab_formal.TablesInfo'),
        ),
        migrations.AddField(
            model_name='path',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='crontab_formal.ServerInfo'),
        ),
        migrations.AlterUniqueTogether(
            name='pyscriptbaseinfov2',
            unique_together={('name', 'path')},
        ),
        migrations.AlterUniqueTogether(
            name='path',
            unique_together={('server', 'path', 'project')},
        ),
    ]
