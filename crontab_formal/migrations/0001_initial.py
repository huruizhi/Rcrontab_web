# Generated by Django 2.0 on 2018-01-17 09:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rcrontab', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PyScriptBaseInfoV2',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.DateField()),
                ('run_type', models.SmallIntegerField(choices=[(0, '调用api'), (1, '调用程序')], default=0)),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('function', models.CharField(max_length=50, verbose_name='程序功能')),
                ('exec_plan', models.IntegerField(blank=True, choices=[(1, 'day'), (2, 'month'), (3, 'quarter')], null=True, verbose_name='执行计划')),
                ('exec_month', models.IntegerField(blank=True, null=True)),
                ('exec_day', models.IntegerField(blank=True, null=True)),
                ('exec_time', models.CharField(blank=True, max_length=50, null=True)),
                ('is_stop', models.IntegerField(choices=[(0, '执行'), (1, '停止')], default=0)),
                ('is_test', models.IntegerField(choices=[(0, '正式'), (1, '测试')], default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='programs', to='rcrontab.PyScriptOwnerList')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='program', to='crontab_formal.Path')),
            ],
            options={
                'db_table': 'py_script_base_info_v2',
            },
        ),
        migrations.CreateModel(
            name='ResultLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.DateField()),
                ('start_time', models.DateTimeField()),
                ('is_normal', models.IntegerField()),
                ('err_info', models.CharField(blank=True, max_length=255, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('script', models.ForeignKey(db_column='sid', on_delete=django.db.models.deletion.DO_NOTHING, related_name='result', to='crontab_formal.PyScriptBaseInfoV2')),
            ],
            options={
                'db_table': 'py_script_result_log',
            },
        ),
        migrations.CreateModel(
            name='ServerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('name', models.CharField(max_length=100)),
                ('uptime', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(1, 'on_line'), (0, 'off_line')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TablesInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_server', models.CharField(choices=[(1, 'db_阿里云'), (2, 'db_151'), (3, 'db_153')], max_length=20)),
                ('db_name', models.CharField(max_length=30)),
                ('table_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.AddField(
            model_name='pyscriptbaseinfov2',
            name='pre_tables',
            field=models.ManyToManyField(related_name='son_program', to='crontab_formal.TablesInfo'),
        ),
        migrations.AddField(
            model_name='pyscriptbaseinfov2',
            name='result_tables',
            field=models.ManyToManyField(related_name='father_program', to='crontab_formal.TablesInfo'),
        ),
        migrations.AddField(
            model_name='path',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='crontab_formal.ServerInfo'),
        ),
    ]
